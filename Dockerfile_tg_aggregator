# 1. 使用官方的 Python 3.13.1 slim 版本作为基础镜像
# slim 版本体积更小，更适合生产环境
FROM python:3.13.1-slim

# 2. 设置环境变量，避免生成 .pyc 文件并确保日志能直接输出
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# 3. 在容器内创建一个工作目录
WORKDIR /app

# 4. 安装 Poetry
# 我们将使用 pip 来安装 poetry 工具
RUN pip install poetry

# 5. 配置 Poetry，让它在项目目录下创建依赖环境，而不是全局环境
RUN poetry config virtualenvs.create false

# 6. 复制依赖管理文件
# 先只复制这两个文件可以更好地利用 Docker 的缓存机制
# 只要这两个文件不变，下面的依赖安装步骤就不会重复执行
COPY pyproject.toml poetry.lock ./

# 7. 安装项目依赖
# --no-dev 表示不安装开发依赖
# --no-root 表示不安装项目本身，因为我们会通过 COPY 指令复制源码
RUN poetry install --no-interaction --no-ansi --no-root

# 8. 复制你的项目源代码到工作目录
COPY ./src/tg_aggregator .

# 创建一个 __init__ 文件
RUN touch ./src/__init__.py

# 9. 声明容器运行时监听的端口
# 这和你 Gunicorn 启动时 -b 参数指定的端口一致
EXPOSE 8849

# 10. 定义启动容器时执行的命令
# 这就是你 systemd 文件中的 ExecStart 命令
CMD ["poetry", "run", "uvicorn", "src.tg_aggregator.main:app", "--host", "0.0.0.0", "--port", "8849"]
