# 工作流的名称
name: Build and Push Docker Image to Docker Hub

# 触发工作流的事件
on:
  # 允许手动触发
  workflow_dispatch:
    # 定义手动触发时可以传入的参数
    inputs:
      # 开关一：是否构建 whore_app
      build_whore_app:
        description: 'Build and push whore_app'
        required: true
        type: boolean
        default: true # 默认勾选

      # 开关二：是否构建 tg_bot
      build_tg_bot:
        description: 'Build and push tg_bot'
        required: true
        type: boolean
        default: true # 默认勾选

      # 开关三：是否构建 tg_aggregator
      build_tg_aggregator:
        description: 'Build and push tg_aggregator'
        required: true
        type: boolean
        default: true # 默认勾选

# 定义工作流中的任务
jobs:
  build-and-push:
    # 任务运行的虚拟环境
    runs-on: ubuntu-latest

    # 任务中的步骤
    steps:
      # 第一步：检出代码
      # 使用官方的 actions/checkout@v5 来获取你的仓库代码
      - name: Checkout repository
        uses: actions/checkout@v5

      # 第二步：登录到 Docker Hub
      # 使用官方的 docker/login-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 第三步：设置 Docker Buildx
      # Buildx 是一个 Docker CLI 插件，可以实现更高级的构建功能
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 第四步：构建并推送 whore_app 镜像 (!!! 有条件执行)
      # 只有当 build_whore_app 开关被勾选时，这个步骤才会运行
      - name: Build and push whore_app
        if: github.event.inputs.build_whore_app == 'true'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile_whore_app
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/whore_app:latest, ${{ secrets.DOCKERHUB_USERNAME }}/whore_app:${{ github.sha }}

      # 第五步：构建并推送 tg_bot 镜像 (!!! 有条件执行)
      # 只有当 build_tg_bot 开关被勾选时，这个步骤才会运行
      - name: Build and push tg_bot
        if: github.event.inputs.build_tg_bot == 'true'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile_tg_bot
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tg_bot:latest, ${{ secrets.DOCKERHUB_USERNAME }}/tg_bot:${{ github.sha }}

      # 第六步：构建并推送 tg_aggregator 镜像 (!!! 有条件执行)
      # 只有当 build_tg_aggregator 开关被勾选时，这个步骤才会运行
      - name: Build and push tg_aggregator
        if: github.event.inputs.build_tg_aggregator == 'true'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile_tg_aggregator
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tg_aggregator:latest, ${{ secrets.DOCKERHUB_USERNAME }}/tg_aggregator:${{ github.sha }}