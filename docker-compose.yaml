# docker-compose.yml


# 定义服务
services:
  # 您的应用服务名，可以自定义
  whore_app:
    # 镜像名称和版本，对应 docker run 中的 whore_app:v3
    image: birdkyle/whore_app:latest

    # 容器名称，对应 --name whore_app
    container_name: whore_app

    # 重启策略，对应 --restart always
    restart: always

    # 端口映射，对应 -p 8848:8848
    ports:
      - "8848:8848"

    # 加载环境变量文件，对应 --env-file ./.env
    env_file:
      - ./.env

    # 添加 host 映射，对应 --add-host "host.docker.internal:host-gateway"
    # 这是让容器能够通过 host.docker.internal 访问宿主机的关键
    extra_hosts:
      - "host.docker.internal:host-gateway"

  tg_bot:
    # 给镜像起个名字
    image: birdkyle/tg_bot:latest
    # container_name: 给容器起个固定的名字
    container_name: tg_bot

    # restart: always 等同于 systemd 中的 Restart=always
    restart: always

    # env_file: 读取 .env 文件中的所有变量并注入到容器中
    # 这等同于 systemd 中的 Environment=...
    env_file:
      - .env

    # extra_hosts: 这是为了确保 host.docker.internal 能够被正确解析
    # 它会将 host.docker.internal 指向宿主机的 IP 地址
    extra_hosts:
      - "host.docker.internal:host-gateway"

  tg_aggregator:

    # 给镜像起个名字
    image: birdkyle/tg_aggregator:latest

    # container_name: 给容器起个固定的名字
    container_name: tg_aggregator

    # restart: always 等同于 systemd 中的 Restart=always
    restart: always

    # env_file: 读取 .env 文件中的所有变量并注入到容器中
    # 这等同于 systemd 中的 Environment=...
    env_file:
      - .env

    # 端口映射
    ports:
      - "8849:8849"

    # extra_hosts: 这是为了确保 host.docker.internal 能够被正确解析
    # 它会将 host.docker.internal 指向宿主机的 IP 地址
    extra_hosts:
      - "host.docker.internal:host-gateway"

    # 挂载session文件
    volumes:
      # 格式为： <宿主机路径>:<容器内路径>
      - ./my_session.session:/app/my_session.session